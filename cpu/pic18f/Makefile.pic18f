### Compiler definitions
CC       = sdcc
AS       = gpasm
LD       = gplink
AR       = gplib
OBJCOPY  = objcopy
STRIP    = strip

### Define the CPU directory
CONTIKI_CPU=$(CONTIKI)/cpu/pic18f

CFLAGS  += --std-c99 -mpic16 -p$(MCU) --stack-auto --use-non-free -Wa -q
LDFLAGS += -c -r -m  -w -l -s $(MCU).lkr
AROPTS   = -c

## memset signature is _not_ portable!
## #define _STRING_SPEC __data
## void *memset(_STRING_SPEC void *, unsigned char, size_t);
ifndef DATAP
DATAP = "(void __data *)"
endif

### CPU-dependent cleanup files
CLEAN += *.lnk *.sym *.lib *.ihx *.rel *.mem *.rst *.asm *.cof *.cod *.calltree *.adb *.pre *.p1 *.d

SDCC_LIB_DIR = $(subst bin/sdcc,share/sdcc/lib/pic16,$(shell which sdcc))
SDCC_NON_FREE_LIB_DIR += $(subst bin/sdcc,share/sdcc/non-free/lib/pic16,$(shell which sdcc))
LDFLAGS += $(addprefix -I , . $(SDCC_LIB_DIR) $(SDCC_NON_FREE_LIB_DIR))
LDFLAGS += $(addprefix -I, $(subst pic16,small-stack-auto,$(SDCC_LIB_DIR)))

### CPU-dependent directories
CONTIKI_CPU_DIRS = . dev

### CPU-dependent source files
CONTIKI_SOURCEFILES += $(CONTIKI_TARGET_SOURCEFILES) \
  pic18f-uart1.c clock.c rtimer-arch.c watchdog.c pic18f.c leds.c ## button.c
CONTIKI_ASMFILES +=


CONTIKI_PLATFORM_DIRS = $(PLATFORM_APPDIRS) \
  ${addprefix $(CONTIKI)/platform/$(TARGET)/, $(CONTIKI_TARGET_DIRS)}

CONTIKI_CPU_DIRS_LIST = ${addprefix $(CONTIKI_CPU)/, \
  $(CONTIKI_CPU_DIRS)}

### Compilation rules

.SUFFIXES:

CUSTOM_RULE_C_TO_OBJECTDIR_O = 1
## CUSTOM_RULE_C_TO_CO = 1
CUSTOM_RULE_ALLOBJS_TO_TARGETLIB = 1
CUSTOM_RULE_LINK = 1

ifdef CUSTOM_RULE_C_TO_OBJECTDIR_O
$(OBJECTDIR)/%.o: %.c | $(OBJECTDIR)
	$(TRACE_CC)
	$(Q)$(CC) $(CFLAGS) -c $< -o $@
	$(Q)$(CC) $(CFLAGS) -MM -c $< > $(@:.o=.d)
	@$(FINALIZE_DEPENDENCY)
endif

ifdef CUSTOM_RULE_C_TO_CO
%.co: %.c
	$(TRACE_CC)
	$(Q)$(CC) $(CFLAGS) -DAUTOSTART_ENABLE -c $< -o $(@:.co=.asm)
	$(Q)$(AS) -p p$(MCU) -c $(@:.co=.asm)
	@mv $(@:.co=.o) $@
endif

## CUSTOM_RULE_ALLOBJS_TO_TARGETLIB
contiki-$(TARGET).lib: $(CONTIKI_OBJECTFILES)
	$(TRACE_AR)
	@rm -f $@
	$(Q)$(AR) $(AROPTS) $@ $^
	@rm -f *.adb

%.$(TARGET): %.co $(PROJECT_OBJECTFILES) $(PROJECT_LIBRARIES) contiki-$(TARGET).lib
	$(TRACE_LD)
	$(Q)$(LD) $(LDFLAGS) -o $@ $*.co \
	$(addsuffix .lib, libsdcc libio$(MCU_FAMILY) libdev$(MCU_FAMILY) libc18f libdebug contiki-$(TARGET))
	@mv $(@:.$(TARGET)=.hex) $@
